% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/miscellaneous.R
\name{mcvals_all}
\alias{mcvals_all}
\title{Obtain the most common value or values of each column in a data frame.}
\usage{
mcvals_all(data, ..., n = 10, output = "df")
}
\arguments{
\item{data}{A data frame or tibble.}

\item{...}{Any number of grouping variables (also present in the data source)
to use for subsetting, separated by commas (e.g. \code{group_var1,
  group_var1}).}

\item{n}{The number of unique values you want frequency counts for from all
variables in data when data frame output is requested (the default). If you
want all unique values, set output = "list" instead.}

\item{output}{Request either a data frame (\code{output} = "df") with the
number of unique values for each variable in data specified by \code{n}, or
a list (\code{output} = "list") for all value counts.}
}
\value{
A data frame or list of the top \code{n} most common value(s) from
all columns in \code{data}, shown in descending order (from left to right
across the numbered columns in the output, e.g. #1 = most common value AKA
the mode, #2 = 2nd most common value, etc.). When in "df" output mode, if
the range of indices passed to \code{n} exceeds the number of unique values
for a measure, the output will contain missing values for those indices.
See the \code{\link[base]{table}} and \code{\link[purrr]{map}}
documentation for more information.

Note that when using grouping variables and requesting
list output (for all of the unique values of each variable), the results will be structured as follows:

$group_1
$group_1$measure_1
y #just ignore this
A, B, C, D, E, F (example unique values of measure 1 for group 1)
5, 4, 3, 2, 1, 1 (example count for each of the above unique values)

$group_1$measure_2
y
2010, 2011, 2012, 2013, 2014, 2015 (unique values of measure 1 for group 1)
5,    4,    3,    2,    1,    1 (count for each of the above unique values)

$group_1$measure_3
y
male, female (unique values of measure 1 for group 1)
60,     60 (count for each of the above unique values)

$group_2
$group_2$measure_1
y #just ignore this
A, B, C, D, E, F (unique values of measure 1 for group 1)
10, 9, 8, 7, 2, 1 (count for each of the above unique values)

$group_2$measure_2
y
2010, 2011, 2012, 2013, 2014, 2015 (unique values of measure 1 for group 1)
15,    8,    8,    6,    2,    2 (count for each of the above unique values)

$group_2$measure_3
y
male, female (unique values of measure 1 for group 1)
109,   109 (count for each of the above unique values)

If multiple grouping variables are provided to ... then the output will look more like this,
e.g. for 2 factors called A and B:

$Alevel1name_Blevel1name$measure_1
y #just ignore this
A, B, C, D, E, F (example unique values of measure 1 for group 1)
5, 4, 3, 2, 1, 1 (example count for each of the above unique values)
}
\description{
\code{mcvals_all} extends \code{\link{mcvals}} by
returning the most common unique value(s) for all columns of a data frame or
tibble, with or without first splitting the data into groups. Useful for
identifying data entry errors or rare cases, among other things.
}
\examples{
data(mtcars)

#without piping
mcvals_all(mtcars)

#with piping
mtcars \%>\% mcvals_all

#get the top 10 for each variable instead
mtcars \%>\% mcvals_all(n = 10)

#get unique values for each variable split by levels of a grouping variable
mtcars \%>\% mcvals_all(cyl)

mtcars \%>\% mcvals_all(cyl, am) #split by two grouping variables

#to obtain all unqiue values, set output = "list":
mtcars \%>\% mcvals_all(output = "list")
mtcars \%>\% mcvals_all(cyl, output = "list")

}
\seealso{
\code{\link{table}}, \code{\link[purrr]{map}}, \code{\link{mcvals}}
}
\author{
Craig P. Hutton, \email{craig.hutton@gmail.com}
}
