% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot_bar}
\alias{plot_bar}
\title{Generate a bar plot.}
\usage{
plot_bar(
  data,
  x = NULL,
  y = NULL,
  ...,
  width = 0.85,
  position = c("dodge", "fill", "stack"),
  dodge_padding = 0.1,
  fill_var = NULL,
  colour_var = NULL,
  xlab = NULL,
  ylab = NULL,
  title = NULL,
  title_hjust = 0.5,
  caption = NULL,
  caption_hjust = 0,
  fill_var_title = NULL,
  colour_var_title = NULL,
  ylim = c(NA, NA),
  ybreaks = ggplot2::waiver(),
  transform_y = FALSE,
  y_transformation = "log10",
  y_var_labs = ggplot2::waiver(),
  x_var_order_by_y = NULL,
  x_var_order = NULL,
  fill_var_order_by_y = NULL,
  fill_var_order = NULL,
  colour_var_order_by_y = NULL,
  colour_var_order = NULL,
  x_var_labs = NULL,
  fill_var_labs = NULL,
  colour_var_labs = NULL,
  fill_var_values = NULL,
  colour_var_values = NULL,
  palette = c("plasma", "C", "magma", "A", "inferno", "B", "viridis", "D", "cividis",
    "E"),
  palette_direction = c("d2l", "l2d"),
  palette_begin = 0,
  palette_end = 0.9,
  alpha = 0.8,
  greyscale = FALSE,
  line_size = 1,
  coord_flip = FALSE,
  theme = c("bw", "classic", "grey", "light", "dark", "minimal"),
  text_size = 14,
  font = c("sans", "serif", "mono"),
  facet_var = NULL,
  facet_var_order = NULL,
  facet_var_labs = NULL,
  facet_var_strip_position = c("top", "bottom"),
  facet_var_text_bold = TRUE,
  legend_position = c("right", "left", "top", "bottom"),
  omit_legend = FALSE,
  interactive = FALSE,
  aesthetic_options = FALSE
)
}
\arguments{
\item{data}{A data frame or tibble containing at least one categorical
variable.}

\item{x}{A categorical variable you want to obtain separate bar plots for (quoted or
unquoted), e.g. x = "variable" or x = variable. If
you want to plot all bars on top of each other (position = "fill" or
position = "stack") to form a single banded bar leave "x" blank and assign
a variable to either fill_var or colour_var instead. N.B. failing to assign
a variable to x will also remove x-axis ticks and labels.}

\item{y}{A numeric variable containing the values you would like plotted on
the y-axis (quoted or unquoted), e.g. y = "variable" or y = variable. If y
is not specified, then the stat = "count" option will be used for
\code{\link[ggplot2]{geom_bar}} and the counts of the variable(s) assigned
to x, fill_var, and/or colour_var will be plotted on the y-axis.}

\item{...}{graphical parameters (not associated with variables) to be passed
to \code{\link[ggplot2]{geom_bar}}, e.g. colour or fill, to be applied
to all bars. To see some of the available options in a web browser, set the
aesthetic_options argument to TRUE.}

\item{width}{Adjusts the width of the bars (default = 0.85).}

\item{position}{Determines how bars are arranged relative to one another when
a grouping variable is assigned to either fill_var or colour_var. The
default, "dodge", uses \code{\link[ggplot2]{position_dodge2}} to arrange
bars side-by-side; "stack" places the bars on top of each other; "fill"
also stacks bars but additionally converts y-axis from counts to
proportions (assuming y argument is unspecified).}

\item{dodge_padding}{If position = "dodge", this controls the gap width
between adjacent bars (default = 0.1). To eliminate the gap, set this to 0.
To overlay bars use a negative value e.g. -0.5. See
\code{\link[ggplot2]{position_dodge2}} for details.}

\item{fill_var}{Use if you want to assign a variable to the bar fill colour,
e.g. fill_var = "grouping_variable" or fill_var = grouping_variable.
Produces separate sets of bars for each level of the fill variable. See
\code{\link[ggplot2]{aes}} for details.}

\item{colour_var}{Use if you want to assign a variable to the bar outline
colour, e.g. colour_var = "grouping_variable" or colour_var =
grouping_variable. Produces separate sets of bars for each level of the
colour variable. See \code{\link[ggplot2]{aes}} for details.}

\item{xlab}{Specify/overwrite the x-axis label using a character string, e.g.
"x-axis label"}

\item{ylab}{Specify/overwrite the y-axis label using a character string, e.g.
"y-axis label"}

\item{title}{Add a main title to the plot using a character string, e.g.
"bar plots of y for each group of x"}

\item{title_hjust}{Left-to-right/horizontal justification (alignment) of
the main plot title. Accepts values from 0 (far left) to 1 (far right).
Default is 0.5 (centre).}

\item{caption}{Add a figure caption to the bottom of the plot using a character string.}

\item{caption_hjust}{Left-to-right/horizontal justification (alignment) of the
caption. Accepts values from 0 (far left) to 1 (far right). Default is 0
(left).}

\item{fill_var_title}{If a variable has been assigned to fill using fill_var,
this allows you to modify the variable label in the plot legend.}

\item{colour_var_title}{If a variable has been assigned to colour using
colour_var, this allows you to modify the variable label in the plot
legend.}

\item{ylim}{specify the y-axis limits, e.g. ylim = c(lower_limit,
upper_limit). Use NA for the existing minimum or maximum value of y, e.g.
the default is ylim = c(NA, NA)}

\item{ybreaks}{This allows you to change the break points to use for tick
marks on the y-axis. \code{\link{seq}} is particularly useful here. See
\code{\link[ggplot2]{scale_y_continuous}} for details. If ybreaks is
specified, then ylim should be also.}

\item{transform_y}{Would you like to transform the y axis? (TRUE or FALSE)}

\item{y_transformation}{If transform_y = TRUE, this determines the
transformation to be applied. Common choices include "log10" (the default),
"log2", "sqrt", or "exp". See \code{\link[ggplot2]{scale_continuous}} for
details.}

\item{y_var_labs}{Allows you to modify the labels displayed with the y-axis
tick marks. See \code{\link[ggplot2]{scale_continuous}} for details.}

\item{x_var_order_by_y}{If a variable has been assigned to x, this allows you
to sort the bars in order of increasing/ascending ("i" or "a") or
decreasing ("d") value of y. If no variable is assigned to y, then the
sorting occurs based on relative counts (position = "dodge" or position =
"stack") or proportions (position = "fill").}

\item{x_var_order}{If a variable has been assigned to x, this allows you to
manually modify the order of the variable groups, e.g. x =
grouping_variable, x_var_order = c("group_2", "group_1"). See
\code{\link[forcats]{fct_relevel}} for details.}

\item{fill_var_order_by_y}{If a variable has been assigned to fill_var, this
allows you to sort the bars in order of increasing/ascending ("i" or "a")
or decreasing ("d") value of y. If no variable is assigned to y, then the
sorting occurs based on relative counts (position = "dodge" or position =
"stack") or proportions (position = "fill").}

\item{fill_var_order}{If a variable has been assigned to fill using fill_var,
this allows you to modify the order of the variable groups, e.g. fill_var =
grouping_variable, fill_var_order = c("group_2", "group_1"). See
\code{\link[forcats]{fct_relevel}} for details.}

\item{colour_var_order_by_y}{If a variable has been assigned to colour_var,
this allows you to sort the bars in order of increasing/ascending ("i" or
"a") or decreasing ("d") value of y. If no variable is assigned to y, then
the sorting occurs based on relative counts (position = "dodge" or position
= "stack") or proportions (position = "fill").}

\item{colour_var_order}{If a variable has been assigned to colour using
colour_var, this allows you to modify the order of the variable groups,
e.g. colour_var = grouping_variable, fill_var_order = c("group_2",
"group_1"). See \code{\link[forcats]{fct_relevel}} for details.}

\item{x_var_labs}{If a variable has been assigned to x, this allows you to
modify the labels of the variable groups, e.g. x = grouping_variable,
x_var_labs = c("group_1_new_label" = "group_1_old_label",
"group_2_new_label" = "group_2_old_label"). See
\code{\link[forcats]{fct_recode}} for details.}

\item{fill_var_labs}{If a variable has been assigned to fill using fill_var,
this allows you to modify the labels of the variable groups, e.g. fill_var
= grouping_variable, fill_var_labs = c("group_1_new_label" =
"group_1_old_label", "group_2_new_label" = "group_2_old_label"). See
\code{\link[forcats]{fct_recode}} for details.}

\item{colour_var_labs}{If a variable has been assigned to colour using
colour_var, this allows you to modify the labels of the variable groups,
e.g. colour_var = grouping_variable, colour_var_labs =
c("group_1_new_label" = "group_1_old_label", "group_2_new_label" =
"group_2_old_label"). See \code{\link[forcats]{fct_recode}} for details.}

\item{fill_var_values}{If a variable has been assigned to fill using
fill_var, this allows you to modify the colours assigned to the fill of
each of the variable groups, e.g. fill_var = grouping_variable,
fill_var_values = c("blue", "red"). See
\code{\link[ggplot2]{scale_fill_manual}} for details. For the colour
options available in base R, see \code{\link[elucidate]{colour_options}}.}

\item{colour_var_values}{If a variable has been assigned to colour using
colour_var, this allows you to modify the colours assigned to the outline
of each of the variable groups, e.g. colour_var = grouping_variable,
colour_var_values = c("blue", "red"). See
\code{\link[ggplot2]{scale_fill_manual}} for details. For the colour
options available in base R, see \code{\link[elucidate]{colour_options}}.}

\item{palette}{If a variable is assigned to fill_var or colour_var, this
determines which
\href{https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html}{viridis
colour palette} to use. Options include "plasma" or "C" (default), "magma"
or "A", "inferno" or "B", "viridis" or "D", and "cividis" or "E". See
\href{https://craig.rbind.io/post/2021-05-17-asgr-3-1-data-visualization/#colourblind-friendly-palettes}{this
link} for examples. You can override these colour palettes with
fill_var_values or colour_var_values.}

\item{palette_direction}{Choose "d2l" for dark to light (default) or "l2d"
for light to dark.}

\item{palette_begin}{Value between 0 and 1 that determines where along the
full range of the chosen colour palette's spectrum to begin sampling
colours. See \code{\link[ggplot2]{scale_fill_viridis_d}} for details.}

\item{palette_end}{Value between 0 and 1 that determines where along the full
range of the chosen colour palette's spectrum to end sampling colours. See
\code{\link[ggplot2]{scale_fill_viridis_d}} for details.}

\item{alpha}{This adjusts the transparency/opacity of the graphical
components of the plot, ranging from 0 = 100\% transparent to 1 = 100\%
opaque.}

\item{greyscale}{Set to TRUE if you want the plot converted to greyscale.}

\item{line_size}{Controls the thickness of the bar outlines.}

\item{coord_flip}{Flips the x and y axes. See
\code{\link[ggplot2]{coord_flip}} for details.}

\item{theme}{Adjusts the theme using 1 of 6 predefined "complete" theme
templates provided by ggplot2. Currently supported options are: "classic",
"bw" (the elucidate default), "grey" (the ggplot2 default), "light",
"dark", & "minimal". See \code{\link[ggplot2]{theme_bw}} for more
information.}

\item{text_size}{This controls the size of all plot text. Default = 14.}

\item{font}{This controls the font of all plot text. Default = "sans"
(Arial). Other options include "serif" (Times New Roman) and "mono" (Courier
New).}

\item{facet_var}{Use if you want separate plots for each level of a grouping
variable (i.e. a faceted plot), e.g. facet_var = "grouping_variable" or
facet_var = grouping_variable. See \code{\link[ggplot2]{facet_wrap}} for
details.}

\item{facet_var_order}{If a variable has been assigned for faceting using
facet_var, this allows you to modify the order of the variable groups, e.g.
facet_var = grouping_variable, facet_var_order = c("group_2", "group_1").
See \code{\link[forcats]{fct_relevel}} for details.}

\item{facet_var_labs}{If a variable has been assigned for faceting using
facet_var, this allows you to modify the labels of the variable groups
which will appear in the facet strips, e.g. facet_var = grouping_variable,
facet_var_labs = c("group_1_new_label" = "group_1_old_label",
"group_2_new_label" = "group_2_old_label"). See
\code{\link[forcats]{fct_recode}} for details.}

\item{facet_var_strip_position}{If a variable has been assigned for faceting
using facet_var, this allows you to modify the position of the facet strip
labels. Sensible options include "top" (the default) or "bottom".}

\item{facet_var_text_bold}{If a variable has been assigned for faceting
using facet_var, this allows you to use boldface (TRUE/default or FALSE)
for the facet strip label text.}

\item{legend_position}{This allows you to modify the legend position.
Options include "right" (the default), "left", "top", & "bottom".}

\item{omit_legend}{Set to TRUE if you want to remove/omit the legends.}

\item{interactive}{Determines whether a static ggplot object or an interactive html
plotly object is returned. See \code{\link[plotly]{ggplotly}} for details.}

\item{aesthetic_options}{If set to TRUE, opens a web browser to the tidyverse
online aesthetic options vignette.}
}
\value{
A ggplot object or plotly object depending on whether static or
interactive output was requested.
}
\description{
Easily generate bar plots using ggplot2 with a simplified
customization interface for common modifications with static (ggplot) and
interactive (plotly) output options. The static output is useful for
producing static reports (e.g. for manuscripts) and is readily customized
further using ggplot2 syntax. The interactive output is helpful for
exploring the data and producing dynamic html reports. To plot a bar graph
of sample means or medians and error bars, see
\code{\link{plot_stat_error}} instead.  See
\href{https://craig.rbind.io/post/2021-05-17-asgr-3-1-data-visualization/}{this
blog post} for an introduction to ggplot2.
}
\examples{

#plotting group counts

plot_bar(pdata,
         x = g,
         xlab = "group",
         fill_var = high_low,
         colour = "black",
         fill_var_values = c("blue2", "red2"))

#plotting specific values on the y-axis, e.g. a grouped summary statistic

library(dplyr)

grouped_y1_max <- pdata \%>\%
   group_by(g) \%>\%
   summarise(y1_max = max(y1), .groups = "drop")

plot_bar(grouped_y1_max, x = g, y = y1_max,
         xlab = "group", ylab = "y1 maximum value",
         x_var_order_by_y = "i", #order levels of x by increasing y value
         fill = "blue2")

}
\references{
Wickham, H. (2016). ggplot2: elegant graphics for data analysis. New York, N.Y.: Springer-Verlag.
}
\seealso{
\code{\link[ggplot2]{geom_bar}}, \code{\link[plotly]{ggplotly}},
\code{\link{plot_stat_error}}
}
\author{
Craig P. Hutton, \email{Craig.Hutton@gov.bc.ca}
}
