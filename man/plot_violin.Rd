% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_functions.R
\name{plot_violin}
\alias{plot_violin}
\title{Generate a violin plot.}
\usage{
plot_violin(data, y, x = NULL, ..., fill_var = NULL,
  colour_var = NULL, xlab = NULL, ylab = NULL, title = NULL,
  fill_var_title = NULL, colour_var_title = NULL, ylim = c(NA, NA),
  transform_y = FALSE, y_transformation = "log10",
  x_var_order = NULL, x_var_labs = NULL, fill_var_order = NULL,
  colour_var_order = NULL, fill_var_labs = NULL,
  colour_var_labs = NULL, fill_var_values = NULL,
  colour_var_values = NULL, alpha = 0.6, greyscale = FALSE,
  theme = "classic", text_size = 14, font = "sans",
  font_options = FALSE, facet_var = NULL, facet_var_order = NULL,
  facet_var_labs = NULL, facet_var_strip_position = "top",
  facet_var_text_bold = TRUE, legend_position = "right",
  omit_legend = FALSE, interactive = FALSE,
  aesthetic_options = FALSE)
}
\arguments{
\item{data}{A data frame or tibble containing the dependent measure "y" and
any grouping variables.}

\item{y}{A numeric variable you want to obtain violin plots for.}

\item{x}{A categorical variable you want to obtain separate violin plots of y for.}

\item{...}{graphical parameters (not associated with variables) to be passed
to \code{\link[ggplot2]{geom_violin}}, e.g. colour or fill, to be applied
to all bars. To see some of the available options in a web browser, set the
aesthetic_options argument to TRUE. An option unique to geom_violin is
draw_quantiles, which adds horizonal lines for the specified quantiles,
e.g. draw_quantiles = c(0.25, 0.5, 0.75) would add lines for the 25th,
50th, and 75th percentiles (similar to a boxplot).}

\item{fill_var}{Use if you want to assign a variable to the violin fill
colour, e.g. fill_var = grouping_variable. Produces separate sets of bars
for each level of the fill variable. See \code{\link[ggplot2]{aes}} for
details.}

\item{colour_var}{Use if you want to assign a variable to the violin
outline colour, e.g. colour_var = grouping_variable. Produces separate sets
of bars for each level of the colour variable. See
\code{\link[ggplot2]{aes}} for details.}

\item{xlab}{Specify/overwrite the x-axis label using a character string, e.g.
"x-axis label"}

\item{ylab}{Specify/overwrite the y-axis label using a character string, e.g.
"y-axis label"}

\item{title}{Add a main title to the plot using a character string, e.g.
"Violin graph of X"}

\item{fill_var_title}{If a variable has been assigned to fill using fill_var,
this allows you to modify the variable label in the plot legend.}

\item{colour_var_title}{If a variable has been assigned to colour using
colour_var, this allows you to modify the variable label in the plot
legend.}

\item{ylim}{specify the y-axis limits, e.g. ylim = c(lower_limit,
upper_limit). Use NA for the existing minimum or maximum value of y, e.g.
the default is ylim = c(NA, NA)}

\item{transform_y}{Would you like to transform the y axis? (TRUE or FALSE)}

\item{y_transformation}{If transform_y = TRUE, this determines the
transformation to be applied. Common choices include "log10" (the default),
"log2", "sqrt", or "exp". See \code{\link[ggplot2]{scale_continuous}} for
details.}

\item{x_var_order}{If a variable has been assigned to x, this allows you to
modify the order of the variable groups, e.g. x = grouping_variable,
x_var_order = c("group_2", "group_1"). See
\code{\link[forcats]{fct_relevel}} for details.}

\item{x_var_labs}{If a variable has been assigned to x, this allows you to
modify the labels of the variable groups, e.g. x = grouping_variable,
x_var_labs = c("group_1_new_label" = "group_1_old_label",
"group_2_new_label" = "group_2_old_label"). See
\code{\link[forcats]{fct_recode}} for details.}

\item{fill_var_order}{If a variable has been assigned to fill using fill_var,
this allows you to modify the order of the variable groups, e.g. fill_var =
grouping_variable, fill_var_order = c("group_2", "group_1"). See
\code{\link[forcats]{fct_relevel}} for details.}

\item{colour_var_order}{If a variable has been assigned to colour using
colour_var, this allows you to modify the order of the variable groups,
e.g. colour_var = grouping_variable, fill_var_order = c("group_2",
"group_1"). See \code{\link[forcats]{fct_relevel}} for details.}

\item{fill_var_labs}{If a variable has been assigned to fill using fill_var,
this allows you to modify the labels of the variable groups, e.g. fill_var
= grouping_variable, fill_var_labs = c("group_1_new_label" =
"group_1_old_label", "group_2_new_label" = "group_2_old_label"). See
\code{\link[forcats]{fct_recode}} for details.}

\item{colour_var_labs}{If a variable has been assigned to colour using
colour_var, this allows you to modify the labels of the variable groups,
e.g. colour_var = grouping_variable, colour_var_labs =
c("group_1_new_label" = "group_1_old_label", "group_2_new_label" =
"group_2_old_label"). See \code{\link[forcats]{fct_recode}} for details.}

\item{fill_var_values}{If a variable has been assigned to fill using
fill_var, this allows you to modify the colours assigned to the fill of
each of the variable groups, e.g. fill_var = grouping_variable,
fill_var_values = c("blue", "red"). See
\code{\link[ggplot2]{scale_fill_manual}} for details. For the colour
options available in base R, see \code{\link[elucidate]{colour_options}}.}

\item{colour_var_values}{If a variable has been assigned to colour using
colour_var, this allows you to modify the colours assigned to the outline
of each of the variable groups, e.g. colour_var = grouping_variable,
colour_var_values = c("blue", "red"). See
\code{\link[ggplot2]{scale_fill_manual}} for details. For the colour
options available in base R, see \code{\link[elucidate]{colour_options}}.}

\item{alpha}{This adjusts the transparency/opacity of the graphical
components of the plot, ranging from 0 = 100% transparent to 1 = 100%
opaque.}

\item{greyscale}{Set to TRUE if you want the plot converted to greyscale.}

\item{theme}{Adjusts the theme using 1 of 6 predefined "complete" theme
templates provided by ggplot2. Currenlty supported options are: "classic"
(the elucidate default), "bw", "grey" (the ggplot2 default), "light",
"dark", & "minimal". See \code{\link[ggplot2]{theme_classic}} for more
information.}

\item{text_size}{This controls the size of all plot text. Default = 14.}

\item{font}{This controls the font of all plot text. Default = "sans" (Arial).}

\item{font_options}{Set to TRUE if you want the (3) available font options to
be printed to the console. See \code{\link[grDevices]{windowsFonts}} for
details.}

\item{facet_var}{Use if you want separate plots for each level of a grouping
variable (i.e. a facetted plot), e.g. facet_var = grouping_variable. See
\code{\link[ggplot2]{facet_wrap}} for details.}

\item{facet_var_order}{If a variable has been assigned for facetting using
facet_var, this allows you to modify the order of the variable groups, e.g.
facet_var = grouping_variable, facet_var_order = c("group_2", "group_1").
See \code{\link[forcats]{fct_relevel}} for details.}

\item{facet_var_labs}{If a variable has been assigned for facetting using
facet_var, this allows you to modify the labels of the variable groups
which will appear in the facet strips, e.g. facet_var = grouping_variable,
facet_var_labs = c("group_1_new_label" = "group_1_old_label",
"group_2_new_label" = "group_2_old_label"). See
\code{\link[forcats]{fct_recode}} for details.}

\item{facet_var_strip_position}{If a variable has been assigned for facetting
using facet_var, this allows you to modify the position of the facet strip
labels. Sensible options include "top" (the default) or "bottom".}

\item{facet_var_text_bold}{If a variable has been assigned for facetting
using facet_var, this allows you to use boldface (TRUE/default or FALSE)
for the facet strip label text.}

\item{legend_position}{This allows you to modify the legend position.
Options include "right" (the default), "left", "top", & "bottom".}

\item{omit_legend}{Set to TRUE if you want to remove/omit the legends.}

\item{interactive}{Determines whether a static ggplot object or an interactive html
plotly object is returned. See \code{\link[plotly]{ggplotly}} for details.}

\item{aesthetic_options}{If set to TRUE, opens a web browser to the tidyverse
online aesthetic options vignette.}
}
\value{
A ggplot object or plotly object depending on whether static or
interactive output was requested.
}
\description{
Easily generate violin plots using ggplot2 with a simplified
customization interface for common modifications with static (ggplot) and
interactive (plotly) output options. The static output is useful for
producing static reports (e.g. for manuscripts) and is readily customized
further using ggplot2 syntax. The interactive output is helpful for
exploratoring the data and producing dynamic html reports.
}
\examples{
data(mtcars) #load the mtcars data

library(magrittr)

mtcars \%>\% plot_violin(y = mpg, x = cyl, fill = "blue")
mtcars \%>\% plot_violin(y = mpg, x = cyl, fill = "blue", draw_quantiles = c(0.25, 0.5, 0.75))

\dontrun{
mtcars \%>\%
 plot_violin(x = cyl, y = hp,
          xlab = "# of cylinders",
          ylab = "horsepower",
          fill_var = am,
          fill_var_title = "transmission",
          fill_var_labs = c("manual" = "0", "automatic" = "1"),
          fill_var_values = c("blue", "red"),
          theme = "bw")

#modifying fill doesn't work as well for the interactive version of a boxplot
mtcars \%>\%
 plot_violin(x = cyl, y = hp,
          xlab = "# of cylinders",
          ylab = "horsepower",
          fill_var = am,
          fill_var_title = "transmission",
          fill_var_labs = c("manual" = "0", "automatic" = "1"),
          fill_var_values = c("blue", "red"),
          theme = "bw",
          interactive = T)

#using colour works better for the interactive version
mtcars \%>\%
 plot_violin(x = cyl, y = hp,
          xlab = "# of cylinders",
          ylab = "horsepower",
          colour_var = am,
          colour_var_title = "transmission",
          colour_var_labs = c("manual" = "0", "automatic" = "1"),
          colour_var_values = c("blue", "red"),
          theme = "bw", interactive = T)
}


}
\references{
Wickham, H. (2016). ggplot2: elegant graphics for data analysis. New York, N.Y.: Springer-Verlag.
}
\seealso{
\code{\link[ggplot2]{geom_violin}}, \code{\link[plotly]{ggplotly}}
}
\author{
Craig P. Hutton, \email{craig.hutton@gmail.com}
}
